{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
 set labels = { 
    what_is_available: node.field_what_is_available.fielddefinition.label, 
    am_i_eligible: node.field_am_i_eligible_.fielddefinition.label, 
    how_do_i_apply: node.field_how_do_i_apply_.fielddefinition.label,
    what_are_my_responsibiliti: node.field_what_are_my_responsibiliti.fielddefinition.label,
    about_the_program: node.field_about_the_program.fielddefinition.label
    
    } 
%}

{%
  set icons = {
      what_is_available: 'icon-info',
      am_i_eligible: 'icon-user',
      how_do_i_apply: 'icon-thumbs-up',
      what_are_my_responsibiliti: 'icon-checkbox',
      about_the_program: 'icon-supportrequest'
  }
%}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>
<h2 class="content-title">{{label}}</h2>

<div><a title="back to all grants and scholarships" href="/repay/repayment-help" class="btn btn-small">
    <i class="icon-uniF489"></i> Back to all programs</a>
</div>
    <ul class="anchor">
    {% if node.field_what_is_available.value %}
       <li> 
            <a href={{'#'~labels.what_is_available|replace({' ': "_"})}}>
                <span class={{icons.what_is_available}}></span>
                {{labels.what_is_available}}
            </a>
        </li>
    {% endif %}

    {% if node.field_am_i_eligible_.value %}
         <li> 
            <a href={{'#'~labels.am_i_eligible|replace({' ': "_"})}}>
                <span class={{icons.am_i_eligible}}></span>
                {{labels.am_i_eligible}}
            </a>
        </li>
    {% endif %}

    {% if node.field_how_do_i_apply_.value %}
         <li> 
            <a href={{'#'~labels.how_do_i_apply|replace({' ': "_"})}}>
                <span class={{icons.how_do_i_apply}}></span>
                {{labels.how_do_i_apply}}
            </a>
        </li>
    {% endif %}

    {% if node.field_what_are_my_responsibiliti.value %}
         <li> 
            <a href={{'#'~labels.what_are_my_responsibiliti|replace({' ': "_"})}}>
                <span class={{icons.what_are_my_responsibiliti}}></span>
                {{labels.what_are_my_responsibiliti}}
            </a>
        </li>
    {% endif %}

    {% if node.field_about_the_program.value %}
         <li> 
            <a href={{'#'~labels.about_the_program|replace({' ': "_"})}}>
                <span class={{icons.about_the_program}}></span>
                {{labels.about_the_program}}
            </a>
        </li>
    {% endif %}
    

    </ul>
    {% if node.field_excerpt.value %}
        <div clas="lead">
            <p> {{ node.field_excerpt.value|raw }}</p>
        </div>
    {% endif %}

    {% if node.field_what_is_available.value %}
    <a name={{node.field_what_is_available.fielddefinition.label|replace({' ': "_"})}} class="jump"></a>
    <div class="box full-width">
        <div class="heading"> <h2>{{ node.field_what_is_available.fielddefinition.label }}</h2></div>
        <div class="node__content">
            {{ node.field_what_is_available.value|raw }}
        </div>
    </div>
    {% endif %}

    {% if node.field_am_i_eligible_.value %}
    <a name={{node.field_am_i_eligible_.fielddefinition.label|replace({' ': "_"})}} class="jump"></a>
    <div class="box full-width">
        <div class="heading"> <h2>{{ node.field_am_i_eligible_.fielddefinition.label }}</h2></div>
        <div class="node__content">
            {{ node.field_am_i_eligible_.value|raw }}
        </div>
    </div>
    {% endif %}

    {% if node.field_how_do_i_apply_.value %}
    <a name={{node.field_how_do_i_apply_.fielddefinition.label|replace({' ': "_"})}} class="jump"></a>
    <div class="box full-width">
        <div class="heading"> <h2>{{ node.field_how_do_i_apply_.fielddefinition.label }}</h2></div>
        <div class="node__content">
            {{ node.field_how_do_i_apply_.value|raw }}
        </div>
    </div>
    {% endif %}

    {% if node.field_what_are_my_responsibiliti.value %}
    <a name={{node.field_what_are_my_responsibiliti.fielddefinition.label|replace({' ': "_"})}} class="jump"></a>
    <div class="box full-width">
        <div class="heading"> <h2>{{ node.field_what_are_my_responsibiliti.fielddefinition.label }}</h2></div>
        <div class="node__content">
            {{ node.field_what_are_my_responsibiliti.value|raw }}
        </div>
    </div>
    {% endif %}

    {% if node.field_about_the_program.value %}
    <a name={{node.field_about_the_program.fielddefinition.label|replace({' ': "_"})}} class="jump"></a>
    <div class="box full-width">
        <div class="heading"> <h2>{{ node.field_about_the_program.fielddefinition.label }}</h2></div>
        <div class="node__content">
            {{ node.field_about_the_program.value|raw }}
        </div>
    </div>
    {% endif %}
</article>

